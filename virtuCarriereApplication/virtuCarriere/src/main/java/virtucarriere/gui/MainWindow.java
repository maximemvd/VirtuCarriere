/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package virtucarriere.gui;

import java.awt.*;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.*;
import virtucarriere.Domaine.AffichageUtil.UnitConverter;
import virtucarriere.Domaine.Carriere.Plan.Arc;
import virtucarriere.Domaine.Carriere.Plan.Entree;
import virtucarriere.Domaine.Carriere.Plan.Equipement;
import virtucarriere.Domaine.Carriere.Plan.Noeud;
import virtucarriere.Domaine.Carriere.Simulation.Vehicule;
import virtucarriere.Domaine.Controller.Controller;
import virtucarriere.Domaine.Controller.Controller.EquipementModes;
import virtucarriere.Domaine.Controller.Controller.VehiculeModes;

public class MainWindow extends JFrame {

  public Controller controller;

  public EquipementModes selectedEquipementMode;

  public VehiculeModes selectedVehicules;

  private MeasurementUnitMode currentMeasurementUnitMode = MeasurementUnitMode.METRIC;
  private ApplicationMode currentApplicationMode;

  public AjoutClientJFrame ajoutClientJFrame = new AjoutClientJFrame();

  public Point currentMousePoint;
  public Point delta;
  public Point initMousePoint = new Point();

  /** Creates new form MainWindow */
  public MainWindow() {
    controller = new Controller();
    initComponents();
    // setFocusable(true);
  }

  public void setAppMode(ApplicationMode newMode) {
    this.currentApplicationMode = newMode;
  }

  public void setMode(EquipementModes newMode) {
    this.selectedEquipementMode = newMode;
  }

  public void setVehicule(VehiculeModes newMode) {
    this.selectedVehicules = newMode;
  }

  public enum MeasurementUnitMode {
    METRIC,
    IMPERIAL
  }

  public enum ApplicationMode {
    SELECT,
    ADD_PLAN,
    ADD_ARC,
    ADD_SIMULATION
  }

  public MeasurementUnitMode getCurrentMeasurementUnitMode() {
    return currentMeasurementUnitMode;
  }

  public void setCurrentMeasurementUnitMode(MeasurementUnitMode newMeasurementUnitMode) {
    this.currentMeasurementUnitMode = newMeasurementUnitMode;
  }

  public DrawingPanel getDrawingPanel() {
    return this.drawingPanel;
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    mainPanel = new javax.swing.JPanel();
    buttonTopPanel = new javax.swing.JPanel(new FlowLayout(FlowLayout.LEFT));
    modeSelection = new javax.swing.JToggleButton();
    toutEffacerButton = new javax.swing.JButton();
    mainScrollPane = new javax.swing.JScrollPane();
    drawingPanel = new virtucarriere.gui.DrawingPanel(this);
    jPanel1 = new javax.swing.JPanel();
    jTabbedPane = new javax.swing.JTabbedPane();
    jPanel2 = new javax.swing.JPanel();
    jComboBox1 = new javax.swing.JComboBox<>();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jComboBox2 = new javax.swing.JComboBox<>();
    jLabel4 = new javax.swing.JLabel();
    entreeButton = new javax.swing.JButton();
    jLabel5 = new javax.swing.JLabel();
    arcButton = new javax.swing.JButton();
    jLabel8 = new javax.swing.JLabel();
    textFieldCoordonneeX = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    textFieldCoordonneeY = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jTextField2 = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTextArea1 = new javax.swing.JTextArea();
    jPanel3 = new javax.swing.JPanel();
    jLabel6 = new javax.swing.JLabel();
    ajoutChargeur = new javax.swing.JToggleButton();
    jLabel11 = new javax.swing.JLabel();
    jLabel12 = new javax.swing.JLabel();
    jButton3 = new javax.swing.JButton();
    jLabel13 = new javax.swing.JLabel();
    jButton4 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jButton6 = new javax.swing.JButton();
    jButton7 = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    jTextArea2 = new javax.swing.JTextArea();
    jLabel14 = new javax.swing.JLabel();
    jMenuBar1 = new javax.swing.JMenuBar();
    fichierMenu = new javax.swing.JMenu();
    menuNouveauProjet = new javax.swing.JMenuItem();
    menuOuvrirProjet = new javax.swing.JMenuItem();
    menuSauvegarderProjet = new javax.swing.JMenuItem();
    menuSauvegarderSous = new javax.swing.JMenuItem();
    menuQuitter = new javax.swing.JMenuItem();
    editionMenu = new javax.swing.JMenu();
    menuUndo = new javax.swing.JMenuItem();
    menuRedo = new javax.swing.JMenuItem();
    menuCopier = new javax.swing.JMenuItem();
    menuColler = new javax.swing.JMenuItem();
    menuCouper = new javax.swing.JMenuItem();
    affichageMenu = new javax.swing.JMenu();
    menuAffichageGrille = new javax.swing.JMenuItem();
    modifierGrille = new javax.swing.JMenuItem();
    resetGrille = new javax.swing.JMenuItem();
    importerMenu = new javax.swing.JMenu();
    importerCarriereMenu = new javax.swing.JMenuItem();
    importerSimulationMenu = new javax.swing.JMenuItem();
    fenetreMenu = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    addMouseWheelListener(
        new java.awt.event.MouseWheelListener() {
          public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
            formMouseWheelMoved(evt);
          }
        });

    mainPanel.setLayout(new java.awt.BorderLayout());

    buttonTopPanel.setToolTipText("");
    buttonTopPanel.setPreferredSize(new java.awt.Dimension(1410, 35));

    modeSelection.setText("Sélection");
    modeSelection.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            modeSelectionActionPerformed(evt);
          }
        });
    buttonTopPanel.add(modeSelection);

    toutEffacerButton.setText("Tout effacer");
    toutEffacerButton.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            toutEffacerButtonActionPerformed(evt);
          }
        });
    buttonTopPanel.add(toutEffacerButton);

    mainPanel.add(buttonTopPanel, java.awt.BorderLayout.NORTH);

    mainScrollPane.addMouseWheelListener(
        new java.awt.event.MouseWheelListener() {
          public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
            mainScrollPaneMouseWheelMoved(evt);
          }
        });

    drawingPanel.setOpaque(false);
    drawingPanel.addMouseMotionListener(
        new java.awt.event.MouseMotionAdapter() {
          public void mouseDragged(java.awt.event.MouseEvent evt) {
            drawingPanelMouseDragged(evt);
          }
        });
    drawingPanel.addMouseWheelListener(
        new java.awt.event.MouseWheelListener() {
          public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
            drawingPanelMouseWheelMoved(evt);
          }
        });
    drawingPanel.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            drawingPanelMouseClicked(evt);
          }

          public void mousePressed(java.awt.event.MouseEvent evt) {
            drawingPanelMousePressed(evt);
          }
        });
    drawingPanel.addKeyListener(
        new java.awt.event.KeyAdapter() {
          public void keyPressed(java.awt.event.KeyEvent evt) {
            drawingPanelKeyPressed(evt);
          }
        });
    drawingPanel.addMouseMotionListener(
        new java.awt.event.MouseMotionAdapter() {
          public void mouseMoved(java.awt.event.MouseEvent evt) {
            drawingPanelMouseMoved(evt);
          }
        });
    drawingPanel.setLayout(new java.awt.BorderLayout());
    mainScrollPane.setViewportView(drawingPanel);

    mainPanel.add(mainScrollPane, java.awt.BorderLayout.CENTER);

    jPanel1.setPreferredSize(new java.awt.Dimension(300, 765));

    jTabbedPane.addChangeListener(
        new javax.swing.event.ChangeListener() {
          public void stateChanged(javax.swing.event.ChangeEvent evt) {
            jTabbedPaneStateChanged(evt);
          }
        });

    jComboBox1.setModel(
        new javax.swing.DefaultComboBoxModel<>(
            new String[] {"Sélectionner", "Broyeur", "Concasseur", "Crible", "Convoyeur"}));
    jComboBox1.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
          }
        });

    jLabel2.setText("Ajouter un équipement");

    jLabel3.setText("Ajouter un noeud ou un tas");

    jComboBox2.setModel(
        new javax.swing.DefaultComboBoxModel<>(new String[] {"Sélectionner", "Noeud", "Tas"}));
    jComboBox2.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox2ActionPerformed(evt);
          }
        });

    jLabel4.setText("Ajouter une entrée");

    entreeButton.setText("Entrée");
    entreeButton.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mousePressed(java.awt.event.MouseEvent evt) {
            entreeButtonMousePressed(evt);
          }
        });
    entreeButton.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            entreeButtonActionPerformed(evt);
          }
        });
    entreeButton.addKeyListener(
        new java.awt.event.KeyAdapter() {
          public void keyPressed(java.awt.event.KeyEvent evt) {
            entreeButtonKeyPressed(evt);
          }
        });

    jLabel5.setText("Ajouter un Arc");

    arcButton.setText("Arc");
    arcButton.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            arcButtonActionPerformed(evt);
          }
        });

    jLabel8.setText("Ajouter noeud ou tas par coordonnées");

    jLabel9.setText("x :");

    jLabel10.setText("y :");

    jButton1.setText("Ajouter noeud");
    jButton1.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
          }
        });

    jButton2.setText("Ajouter tas");
    jButton2.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
          }
        });

    jLabel1.setText("Élément(s) sélectionné(s) :");

    jTextField2.setText("0");
    jTextField2.setEnabled(false);

    jTextArea1.setEditable(false);
    jTextArea1.setColumns(20);
    jTextArea1.setRows(5);
    jTextArea1.addContainerListener(
        new java.awt.event.ContainerAdapter() {
          public void componentAdded(java.awt.event.ContainerEvent evt) {
            jTextArea1ComponentAdded(evt);
          }
        });
    jScrollPane1.setViewportView(jTextArea1);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                jPanel2Layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addGroup(
                        jPanel2Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(
                                jPanel2Layout
                                    .createSequentialGroup()
                                    .addGroup(
                                        jPanel2Layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel8)
                                            .addGroup(
                                                jPanel2Layout
                                                    .createSequentialGroup()
                                                    .addGroup(
                                                        jPanel2Layout
                                                            .createParallelGroup(
                                                                javax.swing.GroupLayout.Alignment
                                                                    .LEADING)
                                                            .addGroup(
                                                                jPanel2Layout
                                                                    .createSequentialGroup()
                                                                    .addGap(60, 60, 60)
                                                                    .addComponent(jLabel9)
                                                                    .addPreferredGap(
                                                                        javax.swing.LayoutStyle
                                                                            .ComponentPlacement
                                                                            .RELATED)
                                                                    .addComponent(
                                                                        textFieldCoordonneeX,
                                                                        javax.swing.GroupLayout
                                                                            .PREFERRED_SIZE,
                                                                        49,
                                                                        javax.swing.GroupLayout
                                                                            .PREFERRED_SIZE))
                                                            .addGroup(
                                                                jPanel2Layout
                                                                    .createSequentialGroup()
                                                                    .addGap(27, 27, 27)
                                                                    .addComponent(
                                                                        jButton1,
                                                                        javax.swing.GroupLayout
                                                                            .PREFERRED_SIZE,
                                                                        114,
                                                                        javax.swing.GroupLayout
                                                                            .PREFERRED_SIZE)))
                                                    .addPreferredGap(
                                                        javax.swing.LayoutStyle.ComponentPlacement
                                                            .RELATED)
                                                    .addGroup(
                                                        jPanel2Layout
                                                            .createParallelGroup(
                                                                javax.swing.GroupLayout.Alignment
                                                                    .LEADING)
                                                            .addComponent(
                                                                jButton2,
                                                                javax.swing.GroupLayout
                                                                    .PREFERRED_SIZE,
                                                                104,
                                                                javax.swing.GroupLayout
                                                                    .PREFERRED_SIZE)
                                                            .addGroup(
                                                                jPanel2Layout
                                                                    .createSequentialGroup()
                                                                    .addComponent(jLabel10)
                                                                    .addPreferredGap(
                                                                        javax.swing.LayoutStyle
                                                                            .ComponentPlacement
                                                                            .RELATED)
                                                                    .addComponent(
                                                                        textFieldCoordonneeY,
                                                                        javax.swing.GroupLayout
                                                                            .PREFERRED_SIZE,
                                                                        48,
                                                                        javax.swing.GroupLayout
                                                                            .PREFERRED_SIZE)))))
                                    .addGap(0, 10, Short.MAX_VALUE))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel2Layout
                                    .createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(
                                        jPanel2Layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(
                                                jComboBox2,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(
                                                jComboBox1,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(64, 64, 64))
                            .addGroup(
                                jPanel2Layout
                                    .createSequentialGroup()
                                    .addGroup(
                                        jPanel2Layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addGroup(
                                                jPanel2Layout
                                                    .createParallelGroup(
                                                        javax.swing.GroupLayout.Alignment.TRAILING,
                                                        false)
                                                    .addGroup(
                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                        jPanel2Layout
                                                            .createSequentialGroup()
                                                            .addComponent(jLabel5)
                                                            .addPreferredGap(
                                                                javax.swing.LayoutStyle
                                                                    .ComponentPlacement.RELATED,
                                                                javax.swing.GroupLayout
                                                                    .DEFAULT_SIZE,
                                                                Short.MAX_VALUE)
                                                            .addComponent(
                                                                arcButton,
                                                                javax.swing.GroupLayout
                                                                    .PREFERRED_SIZE,
                                                                83,
                                                                javax.swing.GroupLayout
                                                                    .PREFERRED_SIZE))
                                                    .addGroup(
                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                        jPanel2Layout
                                                            .createSequentialGroup()
                                                            .addComponent(jLabel4)
                                                            .addPreferredGap(
                                                                javax.swing.LayoutStyle
                                                                    .ComponentPlacement.RELATED)
                                                            .addComponent(entreeButton))))
                                    .addContainerGap(56, Short.MAX_VALUE))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(
                jPanel2Layout
                    .createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        jTextField2,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        39,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)));
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                jPanel2Layout
                    .createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        jComboBox1,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        jComboBox2,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel8)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(
                        jPanel2Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(
                                jPanel2Layout
                                    .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(
                                        textFieldCoordonneeY,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(
                                jPanel2Layout
                                    .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(
                                        textFieldCoordonneeX,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(
                        jPanel2Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(
                        jPanel2Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(entreeButton))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(
                        jPanel2Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(arcButton))
                    .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                    .addGroup(
                        jPanel2Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(
                                jTextField2,
                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        jScrollPane1,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        310,
                        javax.swing.GroupLayout.PREFERRED_SIZE)));

    jTabbedPane.addTab("Plan", jPanel2);

    jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
    jLabel6.setText("Scénario");

    ajoutChargeur.setText("Chargeur");
    ajoutChargeur.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            ajoutChargeurActionPerformed(evt);
          }
        });

    jLabel11.setText("Ajouter un véhicule de chargement");

    jLabel12.setText("Ajouter un client");

    jButton3.setText("Nouveau client");
    jButton3.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
          }
        });

    jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
    jLabel13.setText("Visuel");

    jButton4.setText("Démarrer simulation");

    jButton5.setText("Pause");

    jButton6.setText("Accélérer");

    jButton7.setText("Ralentir");

    jTextArea2.setColumns(20);
    jTextArea2.setRows(5);
    jScrollPane2.setViewportView(jTextArea2);

    jLabel14.setText("Informations sur la simulation en cours");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                jPanel3Layout
                    .createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(
                        jPanel3Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addComponent(jButton6)
                                    .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton7)
                                    .addGap(29, 29, 29))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addComponent(jButton5)
                                    .addGap(84, 84, 84))))
            .addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                jPanel3Layout
                    .createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(
                        jPanel3Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addComponent(jButton3)
                                    .addGap(61, 61, 61))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(93, 93, 93))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addComponent(jButton4)
                                    .addGap(39, 39, 39))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(97, 97, 97))))
            .addGroup(
                jPanel3Layout
                    .createSequentialGroup()
                    .addGroup(
                        jPanel3Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addGroup(
                                        jPanel3Layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addGroup(
                                                jPanel3Layout
                                                    .createSequentialGroup()
                                                    .addGap(88, 88, 88)
                                                    .addComponent(ajoutChargeur)))
                                    .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel3Layout
                                    .createSequentialGroup()
                                    .addGap(0, 12, Short.MAX_VALUE)
                                    .addGroup(
                                        jPanel3Layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(
                                                jScrollPane2,
                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(
                                                jLabel14,
                                                javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addContainerGap()));
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                jPanel3Layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel11)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(ajoutChargeur)
                    .addGap(21, 21, 21)
                    .addComponent(jLabel12)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton3)
                    .addGap(91, 91, 91)
                    .addComponent(jLabel13)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(
                        jPanel3Layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                    .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        jScrollPane2,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        292,
                        javax.swing.GroupLayout.PREFERRED_SIZE)));

    jTabbedPane.addTab("Simulation", jPanel3);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                jPanel1Layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane)
                    .addContainerGap()));
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane));

    mainPanel.add(jPanel1, java.awt.BorderLayout.EAST);

    fichierMenu.setText("Fichier");

    menuNouveauProjet.setText("Nouveau projet");
    menuNouveauProjet.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuNouveauProjetActionPerformed(evt);
          }
        });
    fichierMenu.add(menuNouveauProjet);

    menuOuvrirProjet.setText("Ouvrir un projet");
    menuOuvrirProjet.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuOuvrirProjetActionPerformed(evt);
          }
        });
    fichierMenu.add(menuOuvrirProjet);

    menuSauvegarderProjet.setText("Sauvegarder");
    menuSauvegarderProjet.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuSauvegarderProjetActionPerformed(evt);
          }
        });
    fichierMenu.add(menuSauvegarderProjet);

    menuSauvegarderSous.setText("Sauvegarder sous...");
    menuSauvegarderSous.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuSauvegarderSousActionPerformed(evt);
          }
        });
    fichierMenu.add(menuSauvegarderSous);

    menuQuitter.setText("Quitter");
    menuQuitter.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuQuitterActionPerformed(evt);
          }
        });
    fichierMenu.add(menuQuitter);

    jMenuBar1.add(fichierMenu);

    editionMenu.setText("Édition");

    menuUndo.setText("Undo");
    editionMenu.add(menuUndo);

    menuRedo.setText("Redo");
    editionMenu.add(menuRedo);

    menuCopier.setText("Copier");
    editionMenu.add(menuCopier);

    menuColler.setText("Coller");
    editionMenu.add(menuColler);

    menuCouper.setText("Couper");
    editionMenu.add(menuCouper);

    jMenuBar1.add(editionMenu);

    affichageMenu.setText("Affichage");

    menuAffichageGrille.setText("Afficher/cacher la grille");
    menuAffichageGrille.setSelected(drawingPanel.getGridlines());
    menuAffichageGrille.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            menuAffichageGrilleMouseClicked(evt);
          }
        });
    menuAffichageGrille.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuAffichageGrilleActionPerformed(evt);
          }
        });
    affichageMenu.add(menuAffichageGrille);

    modifierGrille.setText("Modifier la grille");
    modifierGrille.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            modifierGrilleActionPerformed(evt);
          }
        });
    affichageMenu.add(modifierGrille);

    resetGrille.setText("Réinitialiser la grille");
    resetGrille.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetGrilleActionPerformed(evt);
          }
        });
    affichageMenu.add(resetGrille);

    jMenuBar1.add(affichageMenu);

    importerMenu.setText("Importer");
    importerMenu.setToolTipText("");

    importerCarriereMenu.setText("Importer une carrière");
    importerMenu.add(importerCarriereMenu);

    importerSimulationMenu.setText("Importer une simulation");
    importerMenu.add(importerSimulationMenu);

    jMenuBar1.add(importerMenu);

    fenetreMenu.setText("Fenêtre");
    jMenuBar1.add(fenetreMenu);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1524, Short.MAX_VALUE));
    layout.setVerticalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(
                mainPanel,
                javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));

    pack();
  } // </editor-fold>//GEN-END:initComponents

  private void jButton3ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton3ActionPerformed
    ajoutClientJFrame.setVisible(true);
    ajoutClientJFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
  } // GEN-LAST:event_jButton3ActionPerformed

  private void ajoutChargeurActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_ajoutChargeurActionPerformed
    if (this.currentApplicationMode != ApplicationMode.ADD_SIMULATION) {
      setAppMode(ApplicationMode.ADD_SIMULATION);
    }
    this.setVehicule(selectedVehicules.CHARGEUR);
  } // GEN-LAST:event_ajoutChargeurActionPerformed

  private void drawingPanelKeyPressed(
      java.awt.event.KeyEvent evt) { // GEN-FIRST:event_drawingPanelKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
      List<Equipement> equipements = controller.getEquipementList();
      List<Noeud> noeuds = controller.getNoeudList();
      List<Entree> entrees = controller.getEntreeList();
      List<Vehicule> vehicules = controller.getVehiculeList();
      List<Arc> arcs = controller.getArcList();

      for (Equipement equipement : equipements) {
        if (equipement.isSelected()) {
          controller.removeEquipement(equipement);
          drawingPanel.repaint();
        }
      }
      for (Noeud noeud : noeuds) {
        if (noeud.isSelected()) {
          controller.removeNoeud(noeud);
          drawingPanel.repaint();
        }
      }
      for (Entree entree : entrees) {
        if (entree.isSelected()) {
          controller.removeEntree(entree);
          drawingPanel.repaint();
        }
      }
      for (Vehicule vehicule : vehicules) {
        if (vehicule.isSelected()) {
          controller.removeVehicule(vehicule);
          drawingPanel.repaint();
        }
      }

      for (Arc arc : arcs) {
        if (arc.isSelected()) {
          controller.removeArc(arc);
          drawingPanel.repaint();
        }
      }
      rafraichissementTextField();
      drawingPanel.repaint();
    }
  } // GEN-LAST:event_drawingPanelKeyPressed

  private void deleteButtonActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_deleteButtonActionPerformed
    List<Equipement> equipements = controller.getEquipementList();
    List<Noeud> noeuds = controller.getNoeudList();
    List<Entree> entrees = controller.getEntreeList();
    List<Vehicule> vehicules = controller.getVehiculeList();
    List<Arc> arcs = controller.getArcList();

    for (Equipement equipement : equipements) {
      if (equipement.isSelected()) {
        controller.removeEquipement(equipement);
        drawingPanel.repaint();
      }
    }
    for (Noeud noeud : noeuds) {
      if (noeud.isSelected()) {
        controller.removeNoeud(noeud);
        drawingPanel.repaint();
      }
    }
    for (Entree entree : entrees) {
      if (entree.isSelected()) {
        controller.removeEntree(entree);
        drawingPanel.repaint();
      }
    }
    for (Vehicule vehicule : vehicules) {
      if (vehicule.isSelected()) {
        controller.removeVehicule(vehicule);
        drawingPanel.repaint();
      }
    }

    for (Arc arc : arcs) {
      if (arc.isSelected()) {
        controller.removeArc(arc);
        drawingPanel.repaint();
      }
    }
    rafraichissementTextField();
    drawingPanel.repaint();
  } // GEN-LAST:event_deleteButtonActionPerformed

  private void resetGrilleActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_resetGrilleActionPerformed
    double gapGrille = 100;
    this.drawingPanel.setGapGrille(gapGrille);
    this.drawingPanel.repaint();
  } // GEN-LAST:event_resetGrilleActionPerformed

  private void modifierGrilleActionPerformed(java.awt.event.ActionEvent evt) {
    JPanel fields = new JPanel(new GridLayout(2, 2));
    JTextField textField = new JTextField();
    textField.setPreferredSize(new Dimension(11, 15));
    JLabel label = new JLabel("mètres");

    fields.add(textField);
    fields.add(label);

    int result =
        JOptionPane.showConfirmDialog(
            null,
            fields,
            "Entrer les dimensions d'un carré de la grille",
            JOptionPane.OK_CANCEL_OPTION,
            JOptionPane.QUESTION_MESSAGE);

    if (result == JOptionPane.OK_OPTION) {
      double newGridGap;
      try {
        newGridGap = Double.parseDouble(textField.getText());
      } catch (Exception exc) {
        JOptionPane.showMessageDialog(null, "La valeur entrée n'est pas un chiffre valide");
        return;
      }
      if (newGridGap <= 0) {
        JOptionPane.showMessageDialog(null, "La valeur entrée doit être plus grande que zéro");
        throw new ArithmeticException("Negative grid gap.");
      }
      newGridGap = UnitConverter.pixelToMeter(newGridGap);
      this.drawingPanel.setGapGrille(newGridGap);
    }
    this.drawingPanel.repaint();
  }

  private void jButton1ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton1ActionPerformed

    if (this.currentApplicationMode == ApplicationMode.ADD_PLAN) {
      int coordX = Integer.parseInt(textFieldCoordonneeX.getText());
      int coordY = Integer.parseInt(textFieldCoordonneeY.getText());
      Point point = new Point(coordX, coordY);
      this.controller.addNoeud(point);
      drawingPanel.repaint();
    }
  } // GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton2ActionPerformed
    if (this.currentApplicationMode == ApplicationMode.ADD_PLAN) {
      int coordX = Integer.parseInt(textFieldCoordonneeX.getText());
      int coordY = Integer.parseInt(textFieldCoordonneeY.getText());
      Point point = new Point(coordX, coordY);
      this.controller.addTas(point);
      drawingPanel.repaint();
    }
  } // GEN-LAST:event_jButton2ActionPerformed

  private void jComboBox3ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jComboBox3ActionPerformed

    if (this.currentApplicationMode != ApplicationMode.ADD_SIMULATION) {
      setAppMode(ApplicationMode.ADD_SIMULATION);
    }

    if (jComboBox3.getSelectedItem().equals("Chargeur")) {
      this.setVehicule(selectedVehicules.CHARGEUR);
    } else if (jComboBox3.getSelectedItem().equals("Camion")) {
      this.setVehicule(selectedVehicules.CAMION);
    }
  } // GEN-LAST:event_jComboBox3ActionPerformed

  private void jTabbedPaneStateChanged(
      javax.swing.event.ChangeEvent evt) { // GEN-FIRST:event_jTabbedPaneStateChanged
    // TODO add your handling code here:
    if (jTabbedPane.getSelectedIndex() == 0) {
      if (this.currentApplicationMode != ApplicationMode.ADD_PLAN) {
        setAppMode(ApplicationMode.ADD_PLAN);
      }
    } else {
      if (this.currentApplicationMode != ApplicationMode.ADD_SIMULATION) {
        setAppMode(ApplicationMode.ADD_SIMULATION);
      }
    }
  } // GEN-LAST:event_jTabbedPaneStateChanged

  private void menuSauvegarderSousActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    this.controller.saveAs();
  }

  private void menuOuvrirProjetActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    this.controller.openFile();
  } // GEN-LAST:event_menuOuvrirProjetActionPerformed

  private void menuSauvegarderProjetActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_menuSauvegarderProjetActionPerformed
    // TODO add your handling code here:
    this.controller.save();
  } // GEN-LAST:event_menuSauvegarderProjetActionPerformed

  private void ajoutCamionKeyPressed(
      java.awt.event.KeyEvent evt) { // GEN-FIRST:event_ajoutCamionKeyPressed
    // TODO add your handling code here:
    this.setVehicule(VehiculeModes.CAMION);
  } // GEN-LAST:event_ajoutCamionKeyPressed

  private void entreeButtonKeyPressed(
      java.awt.event.KeyEvent evt) { // GEN-FIRST:event_entreeButtonKeyPressed
    // TODO add your handling code here:
  } // GEN-LAST:event_entreeButtonKeyPressed

  private void entreeButtonMousePressed(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_entreeButtonMousePressed
    // TODO add your handling code here:
  } // GEN-LAST:event_entreeButtonMousePressed

  private void drawingPanelMouseClicked(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_drawingPanelMouseClicked
    // TODO add your handling code here:
  } // GEN-LAST:event_drawingPanelMouseClicked

  private void toutEffacerButtonActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_toutEffacerButtonActionPerformed
    List<Equipement> equipements = controller.getEquipementList();
    List<Noeud> noeuds = controller.getNoeudList();
    List<Entree> entrees = controller.getEntreeList();
    List<Arc> arcs = controller.getArcList();

    equipements.stream()
        .map(
            (equipement) -> {
              controller.removeEquipement(equipement);
              return equipement;
            })
        .forEachOrdered(
            (_item) -> {
              drawingPanel.repaint();
            });
    arcs.stream()
        .map(
            (arc) -> {
              controller.removeArc(arc);
              return arc;
            })
        .forEachOrdered(
            (_item) -> {
              drawingPanel.repaint();
            });
    noeuds.stream()
        .map(
            (noeud) -> {
              controller.removeNoeud(noeud);
              return noeud;
            })
        .forEachOrdered(
            (_item) -> {
              drawingPanel.repaint();
            });

    entrees.stream()
        .map(
            (entree) -> {
              controller.removeEntree(entree);
              return entree;
            })
        .forEachOrdered(
            (_item) -> {
              drawingPanel.repaint();
            });
    drawingPanel.repaint();
  }

  private void arcButtonActionPerformed(java.awt.event.ActionEvent evt) {

    setAppMode(ApplicationMode.ADD_ARC);
    this.controller.getNoeudForArcList().clear();
    // this.setMode(EquipementModes.ARC);
  }

  private void jComboBox2ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jComboBox2ActionPerformed

    if (this.currentApplicationMode != ApplicationMode.ADD_PLAN) {
      setAppMode(ApplicationMode.ADD_PLAN);
    }

    if (jComboBox2.getSelectedItem() == "Noeud") {
      this.setMode(EquipementModes.NOEUD);
    } else if (jComboBox2.getSelectedItem() == "Tas") {
      this.setMode(EquipementModes.TAS);
    }
  } // GEN-LAST:event_jComboBox2ActionPerformed

  private void entreeButtonActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_entreeButtonActionPerformed

    if (this.currentApplicationMode != ApplicationMode.ADD_PLAN) {
      setAppMode(ApplicationMode.ADD_PLAN);
    }

    this.setMode(EquipementModes.ENTREE);
  } // GEN-LAST:event_entreeButtonActionPerformed

  private void jTextArea1ComponentAdded(
      java.awt.event.ContainerEvent evt) { // GEN-FIRST:event_jTextArea1ComponentAdded
  } // GEN-LAST:event_jTextArea1ComponentAdded

  public void keyPressed(KeyEvent evt) {
    if (evt.getKeyChar() == KeyEvent.VK_DELETE) {
      List<Equipement> equipements = controller.getEquipementList();
      List<Noeud> noeuds = controller.getNoeudList();
      List<Entree> entrees = controller.getEntreeList();
      for (Equipement equipement : equipements) {
        if (equipement.isSelected()) {
          controller.removeEquipement(equipement);
        }
      }
    }
  }

  public void rafraichissementTextField() {
    jTextArea1.setText("");
    jTextField2.setText("0");
    int numTotal = 0;
    int numNoeud = 0;
    int numTas = 0;
    int numArc = 0;
    List<Equipement> equipements = controller.getEquipementList();
    List<Noeud> noeuds = controller.getNoeudList();
    List<Entree> entrees = controller.getEntreeList();
    List<Vehicule> vehicules = controller.getVehiculeList();
    List<Arc> arcs = controller.getArcList();

    for (Equipement equipement : equipements) {
      if (equipement.isSelected()) {
        numTotal++;
        String nom = String.format("\nCoordonnées du %s", equipement.getName());
        String xCoord = String.format(":\n x : %d", (int) equipement.getX());
        String yCoord = String.format(", y : %d", (int) equipement.getY());
        String nombreTotal = String.format("%d", numTotal);
        jTextArea1.append(nom + xCoord + yCoord);
        jTextField2.setText(nombreTotal);
      }
    }

    for (Noeud noeud : noeuds) {
      if (noeud.getName().equals("Noeud")) {
        numNoeud++;
      }
      if (noeud.getName().equals("Tas")) {
        numTas++;
      }
      if (noeud.isSelected()) {
        numTotal++;
        if (noeud.getName().equals("Noeud")) {
          String nom = String.format("\nCoordonnées du %s", noeud.getName());
          String num = String.format(" #%d", numNoeud);
          String xCoord = String.format(":\n x : %d", (int) noeud.getX());
          String yCoord = String.format(", y : %d", (int) noeud.getY());
          String nombreTotal = String.format("%d", numTotal);
          jTextArea1.append(nom + num + xCoord + yCoord);
          jTextField2.setText(nombreTotal);
        } else if (noeud.getName().equals("Tas")) {
          String nom = String.format("\nCoordonnées du %s", noeud.getName());
          String num = String.format(" #%d", numTas);
          String xCoord = String.format(":\n x : %d", (int) noeud.getX());
          String yCoord = String.format(", y : %d", (int) noeud.getY());
          String nombreTotal = String.format("%d", numTotal);
          jTextArea1.append(nom + num + xCoord + yCoord);
          jTextField2.setText(nombreTotal);
        }
      }
    }

    for (Entree entree : entrees) {
      if (entree.isSelected()) {
        numTotal++;
        String nom = String.format("\nCoordonnées de l'%s", entree.getName());
        String xCoord = String.format(":\n x : %d", (int) entree.getX());
        String yCoord = String.format(", y : %d", (int) entree.getY());
        String nombreTotal = String.format("%d", numTotal);
        jTextArea1.append(nom + xCoord + yCoord);
        jTextField2.setText(nombreTotal);
      }
    }

    for (Vehicule vehicule : vehicules) {
      if (vehicule.isSelected()) {
        numTotal++;
        String nom = String.format("\nCoordonnées du %s", vehicule.getName());
        String xCoord = String.format(":\n x : %d", (int) vehicule.getX());
        String yCoord = String.format(", y : %d", (int) vehicule.getY());
        String nombreTotal = String.format("%d", numTotal);
        jTextArea1.append(nom + xCoord + yCoord);
        jTextField2.setText(nombreTotal);
      }
    }

    for (Arc arc : arcs) {
      if (arc.isSelected()) {
        numTotal++;
        numArc++;
        Point middlePoint =
            new Point(
                arc.middlePointOfArc(
                    (int) arc.getStarting().getX(),
                    (int) arc.getStarting().getY(),
                    (int) arc.getArrival().getX(),
                    (int) arc.getArrival().getY()));
        String nom = String.format("\nCoordonnées du point milieu de l'%s", arc.getName());
        String num = String.format(" #%d", numArc);
        String xCoord = String.format(":\n x : %d", (int) middlePoint.getX());
        String yCoord = String.format(", y : %d", (int) middlePoint.getY());
        String nombreTotal = String.format("%d", numTotal);
        jTextArea1.append(nom + num + xCoord + yCoord);
        jTextField2.setText(nombreTotal);
      }
    }
  }

  private void drawingPanelMouseDragged(java.awt.event.MouseEvent evt) {
    // Serait intéressant de dessiner l'arc au fur et à mesure :
    // https://stackoverflow.com/questions/9711938/java-draw-line-as-the-mouse-is-moved
    if (SwingUtilities.isRightMouseButton(evt)) {
      double deltaX =
          (((int) evt.getX() / drawingPanel.getZoom()) - (int) (this.currentMousePoint.getX()));
      double deltaY =
          (((int) evt.getY() / drawingPanel.getZoom()) - (int) (this.currentMousePoint.getY()));
      this.controller.updateSelectedItemsPositions(deltaX, deltaY);

      this.currentMousePoint =
          new Point(
              (int) (evt.getX() / drawingPanel.getZoom()),
              (int) (evt.getY() / drawingPanel.getZoom()));
      drawingPanel.repaint();
      rafraichissementTextField();
    }
  } // GEN-LAST:event_drawingPanelMouseDragged

  private void ajoutSimulationActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_ajoutSimulationActionPerformed
    this.setAppMode(ApplicationMode.ADD_SIMULATION);
  } // GEN-LAST:event_ajoutSimulationActionPerformed

  private void ajoutElementActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_ajoutElementActionPerformed
    this.setAppMode(ApplicationMode.ADD_PLAN);
  } // GEN-LAST:event_ajoutElementActionPerformed

  private void ajoutCamionActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_ajoutCamionActionPerformed
    this.setVehicule(selectedVehicules.CAMION);
  } // GEN-LAST:event_ajoutCamionActionPerformed

  private void drawingPanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
    Point point = evt.getPoint();
    this.currentMousePoint = evt.getPoint();
    if (evt.getPreciseWheelRotation() > 0) {
      drawingPanel.zoomIn(point);
    } else {
      drawingPanel.zoomOut(point);
    }
  } // GEN-LAST:event_drawingPanelMouseWheelMoved

  private void jComboBox1ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jComboBox1ActionPerformed

    if (this.currentApplicationMode != ApplicationMode.ADD_PLAN) {
      setAppMode(ApplicationMode.ADD_PLAN);
    }
    if (jComboBox1.getSelectedItem() == "Broyeur") {
      this.setMode(EquipementModes.BROYEUR);

    } else if (jComboBox1.getSelectedItem() == "Concasseur") {
      this.setMode(EquipementModes.CONCASSEUR);

    } else if (jComboBox1.getSelectedItem() == "Crible") {
      this.setMode(EquipementModes.CRIBLE);

    } else if (jComboBox1.getSelectedItem() == "Convoyeur") {
      this.setMode(EquipementModes.CONVOYEUR);
    } else if (jComboBox1.getSelectedItem() == "Sélectionner") {
      this.setMode(EquipementModes.RIEN);
    }
  }

  private void modeSelectionActionPerformed(java.awt.event.ActionEvent evt) {
    this.setAppMode(ApplicationMode.SELECT);
  }

  private void AddBroyeurActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_AddBroyeurActionPerformed

    this.setMode(EquipementModes.BROYEUR);
  } // GEN-LAST:event_AddBroyeurActionPerformed

  private void addConcasseurActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_addConcasseurActionPerformed
    this.setMode(EquipementModes.CONCASSEUR);
  } // GEN-LAST:event_addConcasseurActionPerformed

  private void addCribleActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_addCribleActionPerformed
    this.setMode(EquipementModes.CRIBLE);
  } // GEN-LAST:event_addCribleActionPerformed

  private void addConvoyeurActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_addConvoyeurActionPerformed
    // TODO add your handling code here:
    this.setMode(EquipementModes.CONVOYEUR);
  } // GEN-LAST:event_addConvoyeurActionPerformed

  private void drawingPanelMousePressed(java.awt.event.MouseEvent evt) {
    Point mousePoint = evt.getPoint();
    this.initMousePoint =
        new Point(
            (int) (evt.getX() / drawingPanel.getZoom()),
            (int) (evt.getY() / drawingPanel.getZoom()));

    this.currentMousePoint = new Point(this.initMousePoint);
    this.requestFocus();

    if (this.currentApplicationMode == ApplicationMode.SELECT
        && SwingUtilities.isLeftMouseButton(evt)) {
      double xPos = this.currentMousePoint.getX();
      double yPos = this.currentMousePoint.getY();
      this.controller.switchSelectionStatus(xPos, yPos, evt.isShiftDown());
      rafraichissementTextField();
      drawingPanel.repaint();

    } else if (this.currentApplicationMode == ApplicationMode.ADD_PLAN
        && SwingUtilities.isLeftMouseButton(evt)) {
      Point point = new Point((int) this.initMousePoint.getX(), (int) this.initMousePoint.getY());
      Controller.EquipementModes actualEquipement = this.selectedEquipementMode;
      this.controller.addEquipement(actualEquipement, point);
      drawingPanel.repaint();

    } else if (this.currentApplicationMode == ApplicationMode.ADD_SIMULATION
        && SwingUtilities.isLeftMouseButton(evt)) {
      Point point = new Point((int) this.initMousePoint.getX(), (int) this.initMousePoint.getY());
      Controller.VehiculeModes vehiculetoDraw = this.selectedVehicules;
      controller.addVehicule(vehiculetoDraw, point);
      drawingPanel.repaint();
    } else if (this.currentApplicationMode == ApplicationMode.ADD_ARC
        && SwingUtilities.isLeftMouseButton(evt)) {
      Point point = new Point((int) this.initMousePoint.getX(), (int) this.initMousePoint.getY());

      this.controller.noeudSelection(point.getX(), point.getY());
      if (this.controller.getNoeudForArcList().size() == 2) {
        Noeud starting = this.controller.getNoeudForArcList().get(0);
        Noeud arrival = this.controller.getNoeudForArcList().get(1);
        this.controller.addArc(mousePoint, starting, arrival);
        for (Noeud noeud : this.controller.getNoeudForArcList()) {
          noeud.switchSelectionStatus();
        }
        this.controller.getNoeudForArcList().clear();
      }

      drawingPanel.repaint();

      if (this.controller.getNoeudForArcList().size() == 2) {
        Noeud starting = this.controller.getNoeudForArcList().get(0);
        Noeud arrival = this.controller.getNoeudForArcList().get(1);
        this.controller.addArc(mousePoint, starting, arrival);
        this.controller.getNoeudForArcList().get(0).switchSelectionStatus();
        this.controller.getNoeudForArcList().get(1).switchSelectionStatus();
        this.controller.getNoeudForArcList().clear();
      }

      drawingPanel.repaint();
    }
  }

  private void drawingPanelMouseMoved(java.awt.event.MouseEvent evt) {
    Point mousePoint = evt.getPoint();
    drawingPanel.setMouseX(mousePoint.getX());
    drawingPanel.setMouseY(mousePoint.getY());
    drawingPanel.repaint();
  }

  private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {}

  private void mainScrollPaneMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
    Point point = evt.getPoint();
    this.currentMousePoint = evt.getPoint();
    if (evt.getPreciseWheelRotation() > 0) {
      drawingPanel.zoomIn(point);
    } else {
      drawingPanel.zoomOut(point);
    }
  }

  private void menuNouveauProjetActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_menuNouveauProjetActionPerformed
    // TODO add your handling code here:
    this.controller.newProject();
  } // GEN-LAST:event_menuNouveauProjetActionPerformed

  private void menuQuitterActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_menuQuitterActionPerformed
    System.exit(0);
  } // GEN-LAST:event_menuQuitterActionPerformed

  private void buttonAjouterNoeudActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_buttonAjouterNoeudActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_buttonAjouterNoeudActionPerformed

  private void buttonAjouterArcActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_buttonAjouterArcActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_buttonAjouterArcActionPerformed

  private void buttonAjouterConcasseurActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_buttonAjouterConcasseurActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_buttonAjouterConcasseurActionPerformed

  private void buttonAjouterConvoyeurActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_buttonAjouterConvoyeurActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_buttonAjouterConvoyeurActionPerformed

  private void jButton4ActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton4ActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_jButton4ActionPerformed

  private void menuAffichageGrilleActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_menuAffichageGrilleActionPerformed
    drawingPanel.setGridLines();
  } // GEN-LAST:event_menuAffichageGrilleActionPerformed

  private void menuAffichageGrilleMouseClicked(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_menuAffichageGrilleMouseClicked
    // TODO add your handling code here:
  } // GEN-LAST:event_menuAffichageGrilleMouseClicked

  /** @param args the command line arguments */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info :
          javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
        new Runnable() {
          public void run() {
            new MainWindow().setVisible(true);
          }
        });
  }

  public Dimension getMainScrollPaneDimension() {
    return mainScrollPane.getSize();
  }

  public JScrollPane getMainScrollPane() {
    return this.mainScrollPane;
  }

  public void setMainScrollPanePosition(Point point) {
    this.mainScrollPane.getViewport().setViewPosition(point);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenu affichageMenu;
  private javax.swing.JToggleButton ajoutChargeur;
  private javax.swing.JButton arcButton;
  private javax.swing.JPanel buttonTopPanel;
  private virtucarriere.gui.DrawingPanel drawingPanel;
  private javax.swing.JMenu editionMenu;
  private javax.swing.JButton entreeButton;
  private javax.swing.JMenu fenetreMenu;
  private javax.swing.JMenu fichierMenu;
  private javax.swing.JMenuItem importerCarriereMenu;
  private javax.swing.JMenu importerMenu;
  private javax.swing.JMenuItem importerSimulationMenu;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JButton jButton6;
  private javax.swing.JButton jButton7;
  private javax.swing.JComboBox<String> jComboBox1;
  private javax.swing.JComboBox<String> jComboBox2;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTabbedPane jTabbedPane;
  private javax.swing.JTextArea jTextArea1;
  private javax.swing.JTextArea jTextArea2;
  private javax.swing.JTextField jTextField2;
  private javax.swing.JPanel mainPanel;
  private javax.swing.JScrollPane mainScrollPane;
  private javax.swing.JMenuItem menuAffichageGrille;
  private javax.swing.JMenuItem menuColler;
  private javax.swing.JMenuItem menuCopier;
  private javax.swing.JMenuItem menuCouper;
  private javax.swing.JMenuItem menuNouveauProjet;
  private javax.swing.JMenuItem menuOuvrirProjet;
  private javax.swing.JMenuItem menuQuitter;
  private javax.swing.JMenuItem menuRedo;
  private javax.swing.JMenuItem menuSauvegarderProjet;
  private javax.swing.JMenuItem menuSauvegarderSous;
  private javax.swing.JMenuItem menuUndo;
  private javax.swing.JToggleButton modeSelection;
  private javax.swing.JMenuItem modifierGrille;
  private javax.swing.JMenuItem resetGrille;
  private javax.swing.JTextField textFieldCoordonneeX;
  private javax.swing.JTextField textFieldCoordonneeY;
  private javax.swing.JButton toutEffacerButton;
  // End of variables declaration//GEN-END:variables
}
